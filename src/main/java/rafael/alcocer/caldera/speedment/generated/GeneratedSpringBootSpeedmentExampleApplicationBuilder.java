package rafael.alcocer.caldera.speedment.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.Injector;
import com.speedment.runtime.application.AbstractApplicationBuilder;
import com.speedment.runtime.connector.postgres.PostgresBundle;
import rafael.alcocer.caldera.speedment.SpringBootSpeedmentExampleApplication;
import rafael.alcocer.caldera.speedment.SpringBootSpeedmentExampleApplicationBuilder;
import rafael.alcocer.caldera.speedment.SpringBootSpeedmentExampleApplicationImpl;
import rafael.alcocer.caldera.speedment.SpringBootSpeedmentExampleInjectorProxy;
import rafael.alcocer.caldera.speedment.testdb.public_.roles.RolesManagerImpl;
import rafael.alcocer.caldera.speedment.testdb.public_.roles.RolesSqlAdapter;
import rafael.alcocer.caldera.speedment.testdb.public_.user_roles.UserRolesManagerImpl;
import rafael.alcocer.caldera.speedment.testdb.public_.user_roles.UserRolesSqlAdapter;
import rafael.alcocer.caldera.speedment.testdb.public_.users.UsersManagerImpl;
import rafael.alcocer.caldera.speedment.testdb.public_.users.UsersSqlAdapter;

/**
 * A generated base {@link
 * com.speedment.runtime.application.AbstractApplicationBuilder} class for the
 * {@link com.speedment.runtime.config.Project} named public.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedSpringBootSpeedmentExampleApplicationBuilder extends AbstractApplicationBuilder<SpringBootSpeedmentExampleApplication, SpringBootSpeedmentExampleApplicationBuilder> {
    
    protected GeneratedSpringBootSpeedmentExampleApplicationBuilder() {
        super(SpringBootSpeedmentExampleApplicationImpl.class, GeneratedSpringBootSpeedmentExampleMetadata.class);
        withManager(RolesManagerImpl.class);
        withManager(UserRolesManagerImpl.class);
        withManager(UsersManagerImpl.class);
        withComponent(RolesSqlAdapter.class);
        withComponent(UserRolesSqlAdapter.class);
        withComponent(UsersSqlAdapter.class);
        withBundle(PostgresBundle.class);
        withInjectorProxy(new SpringBootSpeedmentExampleInjectorProxy());
    }
    
    @Override
    public SpringBootSpeedmentExampleApplication build(Injector injector) {
        return injector.getOrThrow(SpringBootSpeedmentExampleApplication.class);
    }
}