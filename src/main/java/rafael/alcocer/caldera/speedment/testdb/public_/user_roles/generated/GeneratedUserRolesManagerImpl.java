package rafael.alcocer.caldera.speedment.testdb.public_.user_roles.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import rafael.alcocer.caldera.speedment.testdb.public_.user_roles.UserRoles;
import rafael.alcocer.caldera.speedment.testdb.public_.user_roles.UserRolesImpl;
import rafael.alcocer.caldera.speedment.testdb.public_.user_roles.UserRolesManager;

import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * rafael.alcocer.caldera.speedment.testdb.public_.user_roles.UserRoles} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedUserRolesManagerImpl 
extends AbstractManager<UserRoles> 
implements GeneratedUserRolesManager {
    
    private final TableIdentifier<UserRoles> tableIdentifier;
    
    protected GeneratedUserRolesManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("testdb", "public", "user_roles");
    }
    
    @Override
    public UserRoles create() {
        return new UserRolesImpl();
    }
    
    @Override
    public TableIdentifier<UserRoles> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<UserRoles>> fields() {
        return UserRolesManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<UserRoles>> primaryKeyFields() {
        return Stream.of(
            UserRoles.USER_ID,
            UserRoles.ROLE_ID
        );
    }
}